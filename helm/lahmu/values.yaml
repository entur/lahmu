labels:
  team: ror
  slack: talk-ror
  type: backend

namespace: dev

deployment:
  enabled: true
  replicaCount: 1
  strategy:
    type: RollingUpdate
  terminationGracePeriodSeconds: 30
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: 8080

service:
  type: ClusterIP
  externalPort: 80
  internalPort: 8080

container:
  image:
    identifier: ${artifact.metadata.image}
    pullPolicy: IfNotPresent
  appVersion: ${regex.extract('(?<=\:)(.*$)', artifact.metadata.image)}
  #extraCommand: []
  # - "java"
  #extraFlags: []
  #  - "-jar"
  #  - "-Xmx512"
  #  - "seatmap.jar"
  env: #  [] # environment variables
   - name: LILLESTROM_API_KEY
     valueFrom:
       secretKeyRef:
         name: lahmu-secrets
         key: lillestromApiKey
   - name: DRAMMEN_SECRET
     valueFrom:
       secretKeyRef:
         name: lahmu-secrets
         key: drammenSecret
   - name: DRAMMEN_PUBLIC_ID
     valueFrom:
       secretKeyRef:
         name: lahmu-secrets
         key: drammenPublicId
   - name: ENVIRONMENT_NAMESPACE
     valueFrom:
       fieldRef:
         fieldPath: metadata.namespace
  # - name: PG_DB_USERNAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: seatmap-db-credentials
  #       key: username
  # - name: PG_DB_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: seatmap-db-credentials
  #       key: password
  #envFrom:
  #[] # Envfrom variables
  # - configMapRef:
  #     name: {{ .Release.Name }}-config
  livenessProbe:
    initialDelaySeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
  resources:
    requests:
      memory: 216Mi
    limits:
      cpu: 10m
      memory: 216Mi
  volumeMounts:
    # - name: oidc-auth-volume
    #   mountPath: /etc/entur/oidc-auth
    #   subPath: ""
    #   readOnly: true

#extraContainers:
#[] #|
# - name: seatmap-sql-proxy
#   image: gcr.io/cloudsql-docker/gce-proxy:1.13
#   env:
#   - name: INSTANCES
#     valueFrom:
#       secretKeyRef:
#         name: seatmap-instance-credentials
#         key: INSTANCES
#     command: ["/cloud_sql_proxy", "--dir=/cloudsql", "-credential_file=/secrets/cloudsql/credentials.json", "-verbose=false"]
#     resources:
#       limits:
#         cpu: 75m
#         memory: 60Mi
#       requests:
#         cpu: 50m
#         memory: 40Mi
#     volumeMounts:
#       - name: seatmap-instance-credentials
#         mountPath: /secrets/cloudsql
#         readOnly: true
#       - name: ssl-certs
#         mountPath: /etc/ssl/certs
#       - name: cloudsql
#         mountPath: /cloudsql

#extraInitContainers: []

#extraVolumes:
#[]
# - name: seatmap-instance-credentials
#   secret:
#     secretName: seatmap-instance-credentials
# - name: ssl-certs
#   hostPath:
#     path: /etc/ssl/certs
# - name: cloudsql
#   emptyDir:
# - name: oidc-auth-volume
#   configMap:
#     name: oidc-auth-config

affinity:
  enabled: true
  weight: 100

rbac:
  enabled: false
  # rules:
  #   - apiGroups: [""]
  #     resources:
  #       - pods
  #     verbs: ["get", "list"]

configmap: # remember to edit name and add to volumemounts
  enabled: false

horizontalPodAutoscaler:
  enabled: true
  targetCPUUtilizationPercentage: 80
  minReplicas: 3
  maxReplicas: 5

PodDisruptionBudget:
  enabled: true
  minAvailable: 50%

ingress:
  enabled: true
  loadBalancerIp: 35.205.170.68 # kubectl get svc -n kube-system (the external ip of service named traefik-apigee)
  domainName: entur.io

podSecurityPolicy:
  enabled: false

secrets:
  app:
    name: lahmu-secrets
    lillestromApiKey: ${serviceVariable.lillestromApiKey}
    drammenPublicId: ${serviceVariable.drammenPublicId}
    drammenSecret: ${serviceVariable.drammenSecret}

