version: 2.1

executors:
  java-11:
    docker:
      - image: cimg/openjdk:11.0
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD

orbs:
  gradle: circleci/gradle@2.1.0
  docker: circleci/docker@1.0.1

aliases:
  - &test-command |
    ./gradlew --no-daemon test jacocoTestReport sonarqube \
    -Dsonar.projectKey=entur_$CIRCLE_PROJECT_REPONAME \
    -Dsonar.organization=$SONAR_ORG -Dsonar.projectName=$CIRCLE_PROJECT_REPONAME \
    -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$ENTUR_SONAR_PASSWORD \
    -Dsonar.projectVersion=$CIRCLE_BRANCH$CIRCLE_BUILD_NUM
  - &google-sdk-container-config
    docker:
      - image: google/cloud-sdk:alpine
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD
  - &GCP-auth-docker
    name: GCP authentication with docker
    command: |
      echo $DOCKER_PASSWORD > ${HOME}/account-auth.json
  - &tag-git-version
    name: Tag git commit with build version and push to github
    command: |
      git config --global user.email "circleci@entur.no"
      git config --global user.name "circleci"
      git tag $VERSION
      git push origin $VERSION
  - &create-image-version
    name: Create new image version and store to env var and as file in workspace
    command: |
      echo "export VERSION=$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)"  >> $BASH_ENV
      echo "$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)" > version
  - &docker-build-and-push
    name: Docker build and push
    command: |
      IMAGE="eu.gcr.io/entur-system-1287/$CIRCLE_PROJECT_REPONAME"
      echo "Image: ${IMAGE}"
      docker build -t $IMAGE --build-arg ARTIFACTORY_USER=$ARTIFACTORY_USER --build-arg ARTIFACTORY_PASSWORD=$ARTIFACTORY_PASSWORD .
      docker tag $IMAGE "${IMAGE}":"${VERSION}"
      docker login -u _json_key --password-stdin https://eu.gcr.io < ${HOME}/account-auth.json
      docker push "${IMAGE}":"${VERSION}"

jobs:
  build:
    executor: java-11
    steps:
      - checkout
      - gradle/with_cache:
          steps:
            - run: ./gradlew --no-daemon clean build compileTestKotlin compileTestJava processTestResources -x test
      - persist_to_workspace:
          root: "."
          paths:
            - "*"
  test:
    executor: java-11
    steps:
      - attach_workspace:
          at: "."
      - gradle/with_cache:
          steps:
            - run:
                command: *test-command
                no_output_timeout: 30m
            - store_test_results:
                path: ./test-results/
      - persist_to_workspace:
          root: "."
          paths:
            - "*"
      - store_artifacts:
          path: ./build/reports/tests/test
      - store_test_results:
          path: ./build/test-results/test/
  deploy-docker:
    <<: *google-sdk-container-config
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
      - attach_workspace:
          at: "."
      - run: *GCP-auth-docker
      - run: *create-image-version
      - run: *docker-build-and-push
      - run: *tag-git-version

workflows:
  Build-Publish:
    jobs:
      - build
      - test:
          context: global
          requires:
            - build
      - deploy-docker:
          context: global
          requires:
            - build
            - test
          filters:
            branches:
              only: master
